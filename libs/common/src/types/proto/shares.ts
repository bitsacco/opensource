// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.7
//   protoc               v3.21.12
// source: shares.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export interface BuySharesRequest {
  userId: string;
  quantity: number;
}

export interface BuySharesResponse {
  success: boolean;
  message: string;
  totalCost: number;
}

export interface SharesServiceClient {
  buyShares(request: BuySharesRequest): Observable<BuySharesResponse>;
}

export interface SharesServiceController {
  buyShares(
    request: BuySharesRequest,
  ):
    | Promise<BuySharesResponse>
    | Observable<BuySharesResponse>
    | BuySharesResponse;
}

export function SharesServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['buyShares'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('SharesService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('SharesService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const SHARES_SERVICE_NAME = 'SharesService';
